//Levi Sutton
//Lab 14

#include<iostream>
#include <cstdlib>
#include <cassert>
#include <ctime>
using namespace std;

template <typename T>
bool is_sorted (T* a, size_t size)
{
    if(a!=NULL)
    {
        for (size_t i = 0; i < size-1; i += 1)
        {
            if(*(a + i)>*(a + i + 1))
                return false;
        }
        return true;
    }
    else
    {
        cout<<"Array is empty!"<<endl;
        return false;
    }
}
template <typename T>
void shell_sort (T* a, size_t size)
{
    if(a != NULL)
    {
        for (size_t i = size/2; i > 0; i /= 2)
        {
            for (size_t j = i; j < size; j += 1)
            {
                T temp = *(a + j);
                size_t k;
                for (k = j; k >= i && *(a+(k - i)) > temp; k -= i)
                *(a + k) = *(a + (k - i));
                *(a + k) = temp;
            }
        }
    }
    else
    cout<<"Array is empty!"<<endl;
}
int* create_array (size_t size)
{
    int* a = new int;
    srand((unsigned)time(NULL));
    for (size_t i = 0; i < size; i++)
        *(a + i) = 1 + rand() % 10000;
    return a;
}